[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\joshu\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\joshu\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 16.0.1)
[debug]       Load.loadUnit: plugins took 478.2113ms
[debug]       Load.loadUnit: defsScala took 0.6166ms
[debug] [Loading] Scanning directory C:\Users\joshu\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\joshu\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 51.1901 ms
[debug]           Load.resolveProject(global-plugins) took 193.691ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\joshu\.sbt\1.0\plugins, plugins: List(<none>))) took 372.5203ms
[debug] [Loading] Done in C:\Users\joshu\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 454.6187ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6646ms
[debug]     Load.loadUnit(file:/C:/Users/joshu/.sbt/1.0/plugins/, ...) took 990.284ms
[debug]   Load.apply: load took 2879.4217ms
[debug]   Load.apply: resolveProjects took 19.1668ms
[debug]   Load.apply: finalTransforms took 244.6564ms
[debug]   Load.apply: config.delegates took 41.108ms
[debug]   Load.apply: Def.make(settings)... took 3544.7614ms
[debug]   Load.apply: structureIndex took 899.4748ms
[debug]   Load.apply: mkStreams took 4.2373ms
[info] loading global plugins from C:\Users\joshu\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 17222.5556ms
[debug]           Load.loadUnit: plugins took 179.0391ms
[debug]           Load.loadUnit: defsScala took 0.0093ms
[debug] [Loading] Scanning directory C:\Users\joshu\IdeaProjects\Calculator\project
[debug]             Load.loadUnit: mkEval took 19.1932ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\joshu\IdeaProjects\Calculator\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.4234 ms
[info] loading settings for project calculator-build from idea.sbt ...
[debug]               Load.resolveProject(calculator-build) took 11.5264ms
[debug]             Load.loadTransitive: finalizeProject(Project(id calculator-build, base: C:\Users\joshu\IdeaProjects\Calculator\project, plugins: List(<none>))) took 42.0455ms
[debug] [Loading] Done in C:\Users\joshu\IdeaProjects\Calculator\project, returning: (calculator-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1165.2469ms
[debug]           Load.loadUnit: cleanEvalClasses took 20.166ms
[debug]         Load.loadUnit(file:/C:/Users/joshu/IdeaProjects/Calculator/project/, ...) took 1367.6857ms
[debug]       Load.apply: load took 1378.0886ms
[debug]       Load.apply: resolveProjects took 0.2714ms
[debug]       Load.apply: finalTransforms took 42.1181ms
[debug]       Load.apply: config.delegates took 0.8174ms
[debug]       Load.apply: Def.make(settings)... took 554.3833ms
[debug]       Load.apply: structureIndex took 105.8737ms
[debug]       Load.apply: mkStreams took 0.0043ms
[info] loading project definition from C:\Users\joshu\IdeaProjects\Calculator\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 39136.3527ms
[debug]     Load.loadUnit: defsScala took 0.0205ms
[debug] [Loading] Scanning directory C:\Users\joshu\IdeaProjects\Calculator
[debug]       Load.loadUnit: mkEval took 7.5304ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\joshu\IdeaProjects\Calculator, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 58.1645 ms
[info] loading settings for project calculator from build.sbt ...
[debug]         Load.resolveProject(calculator) took 283.6958ms
[debug]       Load.loadTransitive: finalizeProject(Project(id calculator, base: C:\Users\joshu\IdeaProjects\Calculator, plugins: List(<none>))) took 354.6294ms
[debug] [Loading] Done in C:\Users\joshu\IdeaProjects\Calculator, returning: (calculator)
[debug]     Load.loadUnit: loadedProjectsRaw took 45683.2144ms
[debug]     Load.loadUnit: cleanEvalClasses took 1596.1267ms
[debug]   Load.loadUnit(file:/C:/Users/joshu/IdeaProjects/Calculator/, ...) took 86437.2166ms
[debug] Load.apply: load took 86459.0073ms
[debug] Load.apply: resolveProjects took 2.5321ms
[debug] Load.apply: finalTransforms took 309.2154ms
[debug] Load.apply: config.delegates took 2.159ms
[debug] Load.apply: Def.make(settings)... took 2223.7798ms
[debug] Load.apply: structureIndex took 301.312ms
[debug] Load.apply: mkStreams took 0.0309ms
[info] set current project to Calculator (in build file:/C:/Users/joshu/IdeaProjects/Calculator/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49838 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49838, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Calculator (in build file:/C:/Users/joshu/IdeaProjects/Calculator/)
[debug] > Exec(idea-shell, None, None)
